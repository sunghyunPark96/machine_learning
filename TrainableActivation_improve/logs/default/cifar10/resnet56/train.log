2022-11-18 21:53:43,427 | INFO | 
model:
  name: ResNet56
  architecture:
    in_channels: 3
    out_channels: 10
    activation: Default
optimizer:
  name: SGD
  parameters:
    lr: 0.1
    weight_decay: 0.0001
    momentum: 0.9
scheduler:
  num: 1
  scheduler0:
    name: MultiStepLR
    parameters:
      milestones: [45, 65]
      gamma: 0.1
dataset:
  name: CIFAR10
  batch_size: 128
  split:
    train: 0.9
    valid: 0.1
    test: 1.0
train:
  epochs: 90
  device: cuda:0
  save_path: ./checkpoints/default/cifar10/
  log_path: ./logs/default/cifar10/
  seed: 42
  save_every: 10
test:
  device: cuda:0
  checkpoint: ./checkpoints/default/cifar10/
  log_path: ./logs/default/cifar10/
  seed: 42
2022-11-18 21:53:43,429 | INFO | 
ResNetCifar(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layer1): Sequential(
    (0): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (1): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (2): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (3): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (4): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (5): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (6): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (7): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (8): BasicBlockCifar(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
  )
  (layer2): Sequential(
    (0): BasicBlockCifar(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): LambdaLayerCifar()
      (relu): ReLU()
    )
    (1): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (2): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (3): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (4): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (5): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (6): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (7): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (8): BasicBlockCifar(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
  )
  (layer3): Sequential(
    (0): BasicBlockCifar(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): LambdaLayerCifar()
      (relu): ReLU()
    )
    (1): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (2): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (3): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (4): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (5): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (6): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (7): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
    (8): BasicBlockCifar(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
      (relu): ReLU()
    )
  )
  (fc): Linear(in_features=64, out_features=10, bias=True)
  (relu): ReLU()
)
2022-11-18 21:53:43,430 | INFO | 
SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2022-11-18 21:53:43,430 | INFO | 
MultiStepLR (
  milestones: Counter({45: 1, 65: 1})
  gamma: 0.1
  base_lrs: [0.1]
  last_epoch: 0
  _step_count: 1
  verbose: False
  _get_lr_called_within_step: False
  _last_lr: [0.1]
)
2022-11-18 21:53:43,430 | INFO | 
CrossEntropyLoss()
2022-11-18 21:54:34,193 | INFO | cuda:0 epoch: 1/90 train_loss: 2.1810 valid_loss: 1.8243 epoch_time: 48.591 sec
2022-11-18 21:55:23,146 | INFO | cuda:0 epoch: 2/90 train_loss: 1.5504 valid_loss: 1.4884 epoch_time: 48.952 sec
2022-11-18 21:56:11,992 | INFO | cuda:0 epoch: 3/90 train_loss: 1.2251 valid_loss: 1.5306 epoch_time: 48.845 sec
2022-11-18 21:57:00,962 | INFO | cuda:0 epoch: 4/90 train_loss: 1.0335 valid_loss: 1.0730 epoch_time: 48.970 sec
2022-11-18 21:57:49,892 | INFO | cuda:0 epoch: 5/90 train_loss: 0.9002 valid_loss: 0.9121 epoch_time: 48.930 sec
2022-11-18 21:58:39,017 | INFO | cuda:0 epoch: 6/90 train_loss: 0.7973 valid_loss: 0.9986 epoch_time: 49.124 sec
2022-11-18 21:59:27,786 | INFO | cuda:0 epoch: 7/90 train_loss: 0.7166 valid_loss: 0.8194 epoch_time: 48.769 sec
2022-11-18 22:00:16,614 | INFO | cuda:0 epoch: 8/90 train_loss: 0.6652 valid_loss: 0.9068 epoch_time: 48.828 sec
2022-11-18 22:01:05,403 | INFO | cuda:0 epoch: 9/90 train_loss: 0.6118 valid_loss: 0.8935 epoch_time: 48.788 sec
2022-11-18 22:01:54,168 | INFO | cuda:0 epoch: 10/90 train_loss: 0.5764 valid_loss: 0.6675 epoch_time: 48.764 sec
2022-11-18 22:02:43,010 | INFO | cuda:0 epoch: 11/90 train_loss: 0.5340 valid_loss: 0.6573 epoch_time: 48.841 sec
2022-11-18 22:03:31,832 | INFO | cuda:0 epoch: 12/90 train_loss: 0.5003 valid_loss: 0.6858 epoch_time: 48.822 sec
2022-11-18 22:04:20,587 | INFO | cuda:0 epoch: 13/90 train_loss: 0.4688 valid_loss: 0.6308 epoch_time: 48.755 sec
2022-11-18 22:05:09,211 | INFO | cuda:0 epoch: 14/90 train_loss: 0.4529 valid_loss: 0.6582 epoch_time: 48.624 sec
2022-11-18 22:05:58,041 | INFO | cuda:0 epoch: 15/90 train_loss: 0.4309 valid_loss: 0.5420 epoch_time: 48.829 sec
2022-11-18 22:06:46,786 | INFO | cuda:0 epoch: 16/90 train_loss: 0.4147 valid_loss: 0.5959 epoch_time: 48.745 sec
2022-11-18 22:07:35,525 | INFO | cuda:0 epoch: 17/90 train_loss: 0.3951 valid_loss: 0.6061 epoch_time: 48.738 sec
2022-11-18 22:08:24,498 | INFO | cuda:0 epoch: 18/90 train_loss: 0.3827 valid_loss: 0.5796 epoch_time: 48.973 sec
2022-11-18 22:09:13,367 | INFO | cuda:0 epoch: 19/90 train_loss: 0.3663 valid_loss: 0.7019 epoch_time: 48.868 sec
2022-11-18 22:10:02,165 | INFO | cuda:0 epoch: 20/90 train_loss: 0.3537 valid_loss: 0.5838 epoch_time: 48.798 sec
2022-11-18 22:10:51,092 | INFO | cuda:0 epoch: 21/90 train_loss: 0.3415 valid_loss: 0.5558 epoch_time: 48.926 sec
2022-11-18 22:11:39,872 | INFO | cuda:0 epoch: 22/90 train_loss: 0.3261 valid_loss: 0.5542 epoch_time: 48.780 sec
2022-11-18 22:12:28,578 | INFO | cuda:0 epoch: 23/90 train_loss: 0.3215 valid_loss: 0.6269 epoch_time: 48.705 sec
2022-11-18 22:13:17,462 | INFO | cuda:0 epoch: 24/90 train_loss: 0.3091 valid_loss: 0.6818 epoch_time: 48.884 sec
2022-11-18 22:14:06,507 | INFO | cuda:0 epoch: 25/90 train_loss: 0.3057 valid_loss: 0.5775 epoch_time: 49.045 sec
2022-11-18 22:14:55,460 | INFO | cuda:0 epoch: 26/90 train_loss: 0.2869 valid_loss: 0.5314 epoch_time: 48.953 sec
2022-11-18 22:15:44,310 | INFO | cuda:0 epoch: 27/90 train_loss: 0.2843 valid_loss: 0.5482 epoch_time: 48.849 sec
2022-11-18 22:16:33,233 | INFO | cuda:0 epoch: 28/90 train_loss: 0.2765 valid_loss: 0.5129 epoch_time: 48.922 sec
2022-11-18 22:17:22,000 | INFO | cuda:0 epoch: 29/90 train_loss: 0.2728 valid_loss: 0.5597 epoch_time: 48.767 sec
2022-11-18 22:18:10,876 | INFO | cuda:0 epoch: 30/90 train_loss: 0.2711 valid_loss: 0.5586 epoch_time: 48.876 sec
2022-11-18 22:18:59,630 | INFO | cuda:0 epoch: 31/90 train_loss: 0.2609 valid_loss: 0.6005 epoch_time: 48.753 sec
2022-11-18 22:19:48,441 | INFO | cuda:0 epoch: 32/90 train_loss: 0.2555 valid_loss: 0.5151 epoch_time: 48.810 sec
2022-11-18 22:20:37,218 | INFO | cuda:0 epoch: 33/90 train_loss: 0.2431 valid_loss: 0.5910 epoch_time: 48.777 sec
2022-11-18 22:21:25,904 | INFO | cuda:0 epoch: 34/90 train_loss: 0.2436 valid_loss: 0.4559 epoch_time: 48.685 sec
2022-11-18 22:22:14,580 | INFO | cuda:0 epoch: 35/90 train_loss: 0.2393 valid_loss: 0.5342 epoch_time: 48.675 sec
2022-11-18 22:23:03,349 | INFO | cuda:0 epoch: 36/90 train_loss: 0.2372 valid_loss: 0.5559 epoch_time: 48.769 sec
2022-11-18 22:23:52,036 | INFO | cuda:0 epoch: 37/90 train_loss: 0.2330 valid_loss: 0.4915 epoch_time: 48.687 sec
2022-11-18 22:24:40,975 | INFO | cuda:0 epoch: 38/90 train_loss: 0.2228 valid_loss: 0.5018 epoch_time: 48.939 sec
2022-11-18 22:25:29,805 | INFO | cuda:0 epoch: 39/90 train_loss: 0.2225 valid_loss: 0.5147 epoch_time: 48.829 sec
2022-11-18 22:26:18,624 | INFO | cuda:0 epoch: 40/90 train_loss: 0.2200 valid_loss: 0.5683 epoch_time: 48.819 sec
2022-11-18 22:27:07,590 | INFO | cuda:0 epoch: 41/90 train_loss: 0.2161 valid_loss: 0.5528 epoch_time: 48.966 sec
2022-11-18 22:27:56,483 | INFO | cuda:0 epoch: 42/90 train_loss: 0.2137 valid_loss: 0.5625 epoch_time: 48.892 sec
2022-11-18 22:28:45,200 | INFO | cuda:0 epoch: 43/90 train_loss: 0.2143 valid_loss: 0.5374 epoch_time: 48.716 sec
2022-11-18 22:29:33,917 | INFO | cuda:0 epoch: 44/90 train_loss: 0.2091 valid_loss: 0.5082 epoch_time: 48.717 sec
2022-11-18 22:30:22,713 | INFO | cuda:0 epoch: 45/90 train_loss: 0.2086 valid_loss: 0.4993 epoch_time: 48.796 sec
2022-11-18 22:31:11,580 | INFO | cuda:0 epoch: 46/90 train_loss: 0.1130 valid_loss: 0.3468 epoch_time: 48.866 sec
2022-11-18 22:32:00,340 | INFO | cuda:0 epoch: 47/90 train_loss: 0.0810 valid_loss: 0.3500 epoch_time: 48.759 sec
2022-11-18 22:32:49,150 | INFO | cuda:0 epoch: 48/90 train_loss: 0.0689 valid_loss: 0.3470 epoch_time: 48.810 sec
2022-11-18 22:33:37,718 | INFO | cuda:0 epoch: 49/90 train_loss: 0.0594 valid_loss: 0.3642 epoch_time: 48.567 sec
2022-11-18 22:34:26,518 | INFO | cuda:0 epoch: 50/90 train_loss: 0.0544 valid_loss: 0.3580 epoch_time: 48.800 sec
2022-11-18 22:35:15,434 | INFO | cuda:0 epoch: 51/90 train_loss: 0.0483 valid_loss: 0.3749 epoch_time: 48.915 sec
2022-11-18 22:36:04,367 | INFO | cuda:0 epoch: 52/90 train_loss: 0.0467 valid_loss: 0.3852 epoch_time: 48.933 sec
2022-11-18 22:36:53,197 | INFO | cuda:0 epoch: 53/90 train_loss: 0.0439 valid_loss: 0.3863 epoch_time: 48.829 sec
2022-11-18 22:37:41,898 | INFO | cuda:0 epoch: 54/90 train_loss: 0.0407 valid_loss: 0.3842 epoch_time: 48.701 sec
2022-11-18 22:38:30,587 | INFO | cuda:0 epoch: 55/90 train_loss: 0.0382 valid_loss: 0.3902 epoch_time: 48.689 sec
2022-11-18 22:39:19,444 | INFO | cuda:0 epoch: 56/90 train_loss: 0.0342 valid_loss: 0.3717 epoch_time: 48.856 sec
2022-11-18 22:40:08,024 | INFO | cuda:0 epoch: 57/90 train_loss: 0.0334 valid_loss: 0.4122 epoch_time: 48.579 sec
2022-11-18 22:40:56,756 | INFO | cuda:0 epoch: 58/90 train_loss: 0.0318 valid_loss: 0.4066 epoch_time: 48.732 sec
2022-11-18 22:41:45,529 | INFO | cuda:0 epoch: 59/90 train_loss: 0.0274 valid_loss: 0.3922 epoch_time: 48.773 sec
2022-11-18 22:42:34,277 | INFO | cuda:0 epoch: 60/90 train_loss: 0.0268 valid_loss: 0.4186 epoch_time: 48.748 sec
2022-11-18 22:43:23,264 | INFO | cuda:0 epoch: 61/90 train_loss: 0.0259 valid_loss: 0.4287 epoch_time: 48.986 sec
2022-11-18 22:44:12,103 | INFO | cuda:0 epoch: 62/90 train_loss: 0.0265 valid_loss: 0.4196 epoch_time: 48.839 sec
2022-11-18 22:45:00,879 | INFO | cuda:0 epoch: 63/90 train_loss: 0.0242 valid_loss: 0.4184 epoch_time: 48.776 sec
2022-11-18 22:45:49,686 | INFO | cuda:0 epoch: 64/90 train_loss: 0.0233 valid_loss: 0.4241 epoch_time: 48.806 sec
2022-11-18 22:46:38,543 | INFO | cuda:0 epoch: 65/90 train_loss: 0.0211 valid_loss: 0.4240 epoch_time: 48.857 sec
2022-11-18 22:47:27,467 | INFO | cuda:0 epoch: 66/90 train_loss: 0.0207 valid_loss: 0.4146 epoch_time: 48.923 sec
2022-11-18 22:48:16,310 | INFO | cuda:0 epoch: 67/90 train_loss: 0.0180 valid_loss: 0.4142 epoch_time: 48.843 sec
2022-11-18 22:49:04,997 | INFO | cuda:0 epoch: 68/90 train_loss: 0.0190 valid_loss: 0.4416 epoch_time: 48.686 sec
2022-11-18 22:49:53,853 | INFO | cuda:0 epoch: 69/90 train_loss: 0.0180 valid_loss: 0.4315 epoch_time: 48.856 sec
2022-11-18 22:50:42,611 | INFO | cuda:0 epoch: 70/90 train_loss: 0.0178 valid_loss: 0.3918 epoch_time: 48.757 sec
2022-11-18 22:51:31,275 | INFO | cuda:0 epoch: 71/90 train_loss: 0.0167 valid_loss: 0.4075 epoch_time: 48.664 sec
2022-11-18 22:52:19,962 | INFO | cuda:0 epoch: 72/90 train_loss: 0.0164 valid_loss: 0.4063 epoch_time: 48.686 sec
2022-11-18 22:53:08,695 | INFO | cuda:0 epoch: 73/90 train_loss: 0.0172 valid_loss: 0.4086 epoch_time: 48.733 sec
2022-11-18 22:53:57,409 | INFO | cuda:0 epoch: 74/90 train_loss: 0.0164 valid_loss: 0.4210 epoch_time: 48.714 sec
2022-11-18 22:54:46,172 | INFO | cuda:0 epoch: 75/90 train_loss: 0.0153 valid_loss: 0.4450 epoch_time: 48.763 sec
2022-11-18 22:55:34,772 | INFO | cuda:0 epoch: 76/90 train_loss: 0.0159 valid_loss: 0.4531 epoch_time: 48.599 sec
2022-11-18 22:56:23,482 | INFO | cuda:0 epoch: 77/90 train_loss: 0.0162 valid_loss: 0.4570 epoch_time: 48.709 sec
2022-11-18 22:57:12,141 | INFO | cuda:0 epoch: 78/90 train_loss: 0.0151 valid_loss: 0.4083 epoch_time: 48.659 sec
2022-11-18 22:58:01,012 | INFO | cuda:0 epoch: 79/90 train_loss: 0.0157 valid_loss: 0.4347 epoch_time: 48.871 sec
2022-11-18 22:58:49,905 | INFO | cuda:0 epoch: 80/90 train_loss: 0.0146 valid_loss: 0.4342 epoch_time: 48.892 sec
2022-11-18 22:59:38,921 | INFO | cuda:0 epoch: 81/90 train_loss: 0.0167 valid_loss: 0.4065 epoch_time: 49.016 sec
2022-11-18 23:00:27,813 | INFO | cuda:0 epoch: 82/90 train_loss: 0.0153 valid_loss: 0.4053 epoch_time: 48.892 sec
2022-11-18 23:01:16,708 | INFO | cuda:0 epoch: 83/90 train_loss: 0.0150 valid_loss: 0.4081 epoch_time: 48.894 sec
2022-11-18 23:02:05,480 | INFO | cuda:0 epoch: 84/90 train_loss: 0.0147 valid_loss: 0.4124 epoch_time: 48.772 sec
2022-11-18 23:02:54,197 | INFO | cuda:0 epoch: 85/90 train_loss: 0.0148 valid_loss: 0.4117 epoch_time: 48.716 sec
2022-11-18 23:03:42,934 | INFO | cuda:0 epoch: 86/90 train_loss: 0.0146 valid_loss: 0.4324 epoch_time: 48.737 sec
2022-11-18 23:04:31,776 | INFO | cuda:0 epoch: 87/90 train_loss: 0.0143 valid_loss: 0.4283 epoch_time: 48.842 sec
2022-11-18 23:05:20,586 | INFO | cuda:0 epoch: 88/90 train_loss: 0.0149 valid_loss: 0.4198 epoch_time: 48.810 sec
2022-11-18 23:06:09,444 | INFO | cuda:0 epoch: 89/90 train_loss: 0.0153 valid_loss: 0.4425 epoch_time: 48.858 sec
2022-11-18 23:06:58,203 | INFO | cuda:0 epoch: 90/90 train_loss: 0.0140 valid_loss: 0.4239 epoch_time: 48.758 sec
2022-11-18 23:07:27,325 | INFO | 
train_accuracy: 0.998 train_precision: 0.998 train_recall: 0.998 train_f1: 0.998 valid_accuracy: 0.900 valid_precision: 0.908 valid_recall: 0.900 valid_f1: 0.900 total_time: 4392.601 sec
